# Sistema de Registro de Alunos e Notas

Este é um projeto simples de sistema de registro de alunos e notas usando MySQL. O projeto inclui a criação de um banco de dados, tabelas e exemplos de inserção, consultas, atualizações e exclusões de dados.

## Estrutura do Banco de Dados

1. **Banco de Dados**: `Escola`

2. **Tabelas**:
   - **Alunos**: Armazena informações dos alunos.
     - `id_aluno` (INT, AUTO_INCREMENT, PRIMARY KEY)
     - `nome_aluno` (VARCHAR(50), NOT NULL)
     - `data_nascimento` (VARCHAR(50))
     - `endereço` (VARCHAR(50))

   - **Cursos**: Armazena informações dos cursos.
     - `id_curso` (INT, AUTO_INCREMENT, PRIMARY KEY)
     - `nome_curso` (VARCHAR(50))
     - `descricao` (TEXT)

   - **Notas**: Armazena as notas dos alunos nos cursos.
     - `id_nota` (INT, AUTO_INCREMENT, PRIMARY KEY)
     - `id_aluno` (INT, FOREIGN KEY referenciando `Alunos(id_aluno)`)
     - `id_curso` (INT, FOREIGN KEY referenciando `Cursos(id_curso)`)
     - `nota` (DECIMAL(5,2))

## Instruções de Uso

1. **Criar o Banco de Dados e Tabelas**:
   Execute o script SQL fornecido para criar o banco de dados `Escola`, tabelas e definir relacionamentos.

2. **Inserir Dados**:
   Execute os comandos `INSERT INTO` para adicionar registros nas tabelas `Alunos`, `Cursos` e `Notas`.

3. **Consultar Dados**:
   Utilize as consultas SQL fornecidas para visualizar alunos e suas notas, calcular a média das notas por curso, e encontrar a maior nota por curso.

4. **Atualizar Dados**:
   Utilize os comandos `UPDATE` para modificar as notas dos alunos e atualizar os endereços.

5. **Excluir Dados**:
   Utilize os comandos `DELETE` para remover notas e cursos específicos.

## Exemplos de Consultas

- **Mostrar Alunos, Cursos e Notas**:
  ```sql
  SELECT 
      Alunos.nome_aluno AS Alunos,
      Cursos.nome_curso AS Cursos,
      Notas.nota AS Notas
  FROM Notas
  JOIN Alunos ON Notas.id_aluno = Alunos.id_aluno
  JOIN Cursos ON Notas.id_curso = Cursos.id_curso;
Calcular a Média das Notas por Curso:
SELECT
    Cursos.nome_curso AS Curso,
    AVG(Notas.nota) AS MediaNota
FROM Notas
JOIN Cursos ON Notas.id_curso = Cursos.id_curso
GROUP BY Cursos.nome_curso;
Encontrar a Maior Nota por Curso:
WITH MaiorNotaPorCurso AS (
    SELECT id_curso, MAX(nota) AS MaiorNota
    FROM Notas
    GROUP BY id_curso
)
SELECT
    Cursos.nome_curso AS Curso,
    Alunos.nome_aluno AS Aluno,
    MaiorNotaPorCurso.MaiorNota
FROM MaiorNotaPorCurso
JOIN Cursos ON MaiorNotaPorCurso.id_curso = Cursos.id_curso
JOIN Notas ON MaiorNotaPorCurso.id_curso = Notas.id_curso 
    AND MaiorNotaPorCurso.MaiorNota = Notas.nota
JOIN Alunos ON Notas.id_aluno = Alunos.id_aluno;
Contribuições
Se você deseja contribuir para este projeto, sinta-se à vontade para abrir um pull request ou relatar problemas.

Licença
Este projeto está licenciado sob a MIT License. Veja o arquivo LICENSE para mais detalhes.
