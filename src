-- Sistema de registro de alunos e notas!
DROP DATABASE IF EXISTS Escola; 
SET SQL_SAFE_UPDATES = 0;
CREATE DATABASE Escola;
USE Escola;

-- Criar tabela Alunos
CREATE TABLE Alunos (
    id_aluno INT AUTO_INCREMENT PRIMARY KEY,
    nome_aluno VARCHAR(50) NOT NULL,
    data_nascimento VARCHAR(50),
    endereço VARCHAR(50)
);

-- Criar tabela Cursos
CREATE TABLE Cursos (
    id_curso INT AUTO_INCREMENT PRIMARY KEY,
    nome_curso VARCHAR(50),
    descricao TEXT
);

-- Criar tabela Notas
CREATE TABLE Notas (
    id_nota INT AUTO_INCREMENT PRIMARY KEY,
    id_aluno INT NOT NULL,
    id_curso INT NOT NULL,
    nota DECIMAL(5,2),
    FOREIGN KEY (id_aluno) REFERENCES Alunos(id_aluno),
    FOREIGN KEY (id_curso) REFERENCES Cursos(id_curso)
);

-- Inserir dados na tabela Alunos
INSERT INTO Alunos (nome_aluno, data_nascimento, endereço) VALUES
('Jorge', '2000-01-01', 'Rua A, 123'),
('Josivaldo', '1998-05-21', 'Avenida B, 456'),
('Jorel', '1996-11-30', 'Rua C, 789'),
('Jornei', '1997-07-15', 'Rua D, 012'),
('Dorival', '1999-03-18', 'Rua E, 345');

-- Inserir dados na tabela Cursos
INSERT INTO Cursos (nome_curso, descricao) VALUES
('HTML', 'Curso de HTML'),
('EXCEL', 'Curso de Excel'),
('PORTUGOL', 'Curso de Portugol');

-- Inserir dados na tabela Notas
INSERT INTO Notas (id_aluno, id_curso, nota) VALUES
(1, 1, 7.1),  -- Jorge, HTML
(2, 2, 8.7),  -- Josivaldo, EXCEL
(3, 3, 9.6),  -- Jorel, PORTUGOL
(4, 1, 9.0),  -- Jornei, HTML
(5, 2, 5.0);  -- Dorival, EXCEL

-- Consulta para mostrar alunos, cursos e notas
SELECT 
    Alunos.nome_aluno AS Alunos,
    Cursos.nome_curso AS Cursos,
    Notas.nota AS Notas
FROM Notas
JOIN Alunos ON Notas.id_aluno = Alunos.id_aluno
JOIN Cursos ON Notas.id_curso = Cursos.id_curso;

-- Consulta para calcular a média das notas por curso
SELECT
    Cursos.nome_curso AS Curso,
    AVG(Notas.nota) AS MediaNota
FROM Notas
JOIN Cursos ON Notas.id_curso = Cursos.id_curso
GROUP BY Cursos.nome_curso;

-- Consulta para encontrar a maior nota por curso
WITH MaiorNotaPorCurso AS (
    SELECT id_curso, MAX(nota) AS MaiorNota
    FROM Notas
    GROUP BY id_curso
)
SELECT
    Cursos.nome_curso AS Curso,
    Alunos.nome_aluno AS Aluno,
    MaiorNotaPorCurso.MaiorNota
FROM MaiorNotaPorCurso
JOIN Cursos ON MaiorNotaPorCurso.id_curso = Cursos.id_curso
JOIN Notas ON MaiorNotaPorCurso.id_curso = Notas.id_curso 
    AND MaiorNotaPorCurso.MaiorNota = Notas.nota
JOIN Alunos ON Notas.id_aluno = Alunos.id_aluno;

-- Atualizar nota de um aluno
UPDATE Notas
SET nota = 8.5
WHERE id_aluno = 2 AND id_curso = 3;

-- Atualizar endereço de um aluno
UPDATE Alunos
SET endereço = 'Rua C, 345'
WHERE id_aluno = 1;

-- Excluir todas as notas para um curso específico
DELETE FROM Notas
WHERE id_curso = 1;

-- Excluir um curso específico
DELETE FROM Cursos
WHERE id_curso = 1;
